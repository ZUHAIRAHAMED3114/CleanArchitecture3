@inject IDeleteProductUseCase deleteProductUseCase
@inject IUpdateQuantityUseCase updateQuantityUseCase

@if (LineItem != null && LineItem.Product != null){
<li class="row">
    <div class="col">
        <img src="@LineItem.Product.ImageLink" />
    </div>
    <div class="col">
         <h5>@LineItem.Product.Name</h5>
         <div>
               Quantity:&nbsp;&nbsp;
               <input type="number" min="0" 
                      value="@LineItem.Quantity"
                      onchange="HanldeQuantityChange"/>
         </div>
         <div>
             Price &nbsp;&nbsp;@LineItem.Product.Price.ToString("c")
         </div>
    </div>
    <div class="col">
        <button class="btn btn-light"
                @onclick="@(()=> { DeleteProduct(LineItem.ProductId); })"
                > Delete</button>
    </div>
</li>
}

@code {


    [Parameter]
    public OrderLineItem LineItem { get; set; }
    [Parameter]
    public EventCallback<Order> OnDeleteProduct { get; set; }
    [Parameter]
    public EventCallback<Order> OnUpdateProduct { get; set; }
    
    //Bug Is there OnHandleQuantityChange Will Not Wokring....?
    async void HandleQuantityChange(ChangeEventArgs e) {
        if (string.IsNullOrWhiteSpace(e.Value.ToString())) return;

        if (int.TryParse(e.Value.ToString(), out var qty)) {
            if (qty < 0) return;
            var order = await updateQuantityUseCase.Execute(LineItem.ProductId,qty);
            await OnUpdateProduct.InvokeAsync(order);
        }



    }
    async void DeleteProduct(int productId) {
        var order = await deleteProductUseCase.Execute(productId);
        await OnDeleteProduct.InvokeAsync(order);
    }

}
